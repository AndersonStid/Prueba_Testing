name: CI Serenity BDD - API Tests

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build-and-test-apis:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Descargar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Configurar Java (usa la versión definida en tu proyecto)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      # 3️⃣ Dar permisos al Gradle Wrapper
      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x gradlew
        working-directory: AUTOMATIZACION_APIS

      # 4️⃣ Compilar el proyecto (sin ejecutar pruebas aún)
      - name: Build API Automation Project
        run: ./gradlew clean build -x test
        working-directory: AUTOMATIZACION_APIS
      
      # 5️⃣ Mirar un error
      - name: list test resource
        run: ls -R src/test/resources
        working-directory: AUTOMATIZACION_APIS

      # 5️⃣ Ejecutar las pruebas de API automatizadas
      - name: Run Serenity API Tests
        run: ./gradlew test aggregate
        working-directory: AUTOMATIZACION_APIS

      # 6️⃣ Subir el reporte Serenity como artefacto descargable
      - name: Upload Serenity API Reports
        uses: actions/upload-artifact@v4
        with:
          name: serenity-api-report
          path: AUTOMATIZACION_APIS/target/site/serenity/

      # (Opcional) 7️⃣ Publicar reporte en GitHub Pages (requiere permisos)
      # - name: Deploy Serenity API Report to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: AUTOMATIZACION_APIS/target/site/serenity
